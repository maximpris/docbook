<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="DocBook.UI.FramePage">
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.UI.StdPage</Super>
<TimeCreated>64014,13860.020986</TimeCreated>

<Method name="OnPage">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    Set key = ""    
    Set setid = ""
	Set key = $G(%request.Data("KEY",1))	
	Set setid = $G(%request.Data("SET",1))	
	Set startPage = key = ""
	
	
	Set menu = ##class(DocBook.UI.FramePageMenu).%New()
	Set bookName = "Cach&eacute; DocBook"
	Set bookTitle = ""
	Set setTitle = ""
	

	Set timestamp = ""
	Set source = ""
	Set info = ##class(BannerInfo).%New()
	Set glo = $zu(67,9,$J)
	Set elap = $zh
	
	// Internet Explorer flags
    Set %ie = ..isIE()
    Set %ie6 = ..isIE6()
    
    // Netscape Flags
    Set %ns7 = ..isNS7()
	
	If (key '= "") {
		Set bookName = menu.GetBookTitle(key)
		If (key = "KNBASE") {
			Set container = ##class(DocBook.KNBase).%New()
			Set timestamp = $G(^DocBook.LoadTime)
		}
		ElseIf (key = "CATALOG") {
			Set container = ##class(DocBook.Catalog).%New()
			Set timestamp = $G(^DocBook.LoadTime)
		}
		ElseIf (key = "GettingStarted") {
			Set container = ##class(DocBook.GettingStarted).%New()
			Set timestamp = $G(^DocBook.LoadTime)
		}
		Else {
			// open container object					
			Set container = ##class(DocBook.container).OpenKey(key)
		}

		If (container = "") {
			Set info.title = $$$T("Error")
			Set info.booktitle = $$$T("InterSystems Online Documentation")
			Write $$$T("Missing or Invalid Document"),!
		}
		ElseIf ($D(^DocBook.OffLine)) {
			Set info.title = $$$T("Documentation Unavailable")
			Set info.booktitle = $$$T("InterSystems Online Documentation")		
			Write $$$T("The documentation server is currently unavailable."),!
		}
		Else {
			Do container.GetBannerInfo(info)
			Set info.container = container
			Set source = container.sourcefile
			Set:timestamp="" timestamp = container.sourcetime			
			Set setTitle = container.GetSetName()
		}
		
		Set bookTitle = info.title
	}
	
	Set title = bookName
	if (bookTitle '= "") {
		if (setTitle = "") {
			Set title = "InterSystems "_title_" - "_bookTitle	
		}
		else {
			Set title = "InterSystems "_setTitle_"-"_title_" - "_bookTitle
		}
		
	}
	
	&html<<!DOCTYPE html>
	<html>
    <head>
    	<title>#(title)#</title>
    	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    	<LINK REL="stylesheet" TYPE="text/css" HREF="docbook_menu.css" TITLE="Standard Style" >
    	<LINK REL="stylesheet" TYPE="text/css" HREF="docbook_StartPage.css" TITLE="Standard Style" >    
    	<LINK REL="stylesheet" TYPE="text/css" HREF="docbookhtml.css" TITLE="Standard Style" >
        <LINK REL="stylesheet" TYPE="text/css" HREF="DocBook_Page.css" TITLE="Standard Style" >	    
        
    </head>	
	<BODY class="#($S(startPage=0:"book-page",1:"start-page"))#">>
		
	Set escapedkey = ##class(%CSP.Page).EscapeHTML(key)
    &html<<INPUT TYPE="HIDDEN" ID="KEY" NAME="KEY" VALUE="#(escapedkey)#">>
    
   
    
    &html<<script type="text/javascript" src="jquery-1.12.1.min.js"></script>
    <SCRIPT LANGUAGE=JavaScript SRC="js.cookie.js"> </SCRIPT> 	
     <SCRIPT LANGUAGE=JavaScript SRC="docbook.js"> </SCRIPT> 	
     <SCRIPT LANGUAGE=JavaScript SRC="docbook_nav.js"> </SCRIPT>
     <SCRIPT LANGUAGE=JavaScript SRC="docbook_page.js"> </SCRIPT>      
     <SCRIPT type="text/javascript">	
		var isMobile = false; //initiate as false
			// device detection
			if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) 
		    	|| /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) isMobile = true;
	    		
	   		if(isMobile) {
			   	$('body').addClass('mobile').removeClass('desktop');
			}
			else {
				$('body').removeClass('mobile').addClass('desktop');
			}	
		</SCRIPT>
     >	
     
     
    &html<<div id="menuContainer" class="menu-container">
			<DIV id="mobileHeader" CLASS="Title BookHeader hid">
				<A id="bookBack" data-ajax-ignored  HREF="DocBook.UI.FramePage.cls" class='backButton' title='Go to main list'>&laquo; Back</A> 
				<span id="bookTitle">#(bookName)#</span>
				<div id='bookMenuBtn' class="menuH">
					<div class="line"></div>
					<div class="line"></div>
					<div class="line"></div>
				</div>
			</DIV>
			<div id='bookMenu' class='menu expanded show-menu'>>
				Do menu.RenderMenu(key, setid)
		&html<</div>
		   </div>
		   <div class='loading' style='display:none'><div class='loading-inner'></div></div>
		   <div id="book" class="book">		   
		   	<div id="bookInner">>
		   		If (key '= "") {	
		   			&html<<BR>>
		   			If (container = "") {						
						Write $$$T("Missing or Invalid Document"),!
					}
					ElseIf ($D(^DocBook.OffLine)) {						
						Write $$$T("The documentation server is currently unavailable."),!
					}
					Else {						
						&html<<div class="category-name-container"><div class="category-name"><a class="hide-show-left-menu" href="#" id="hideShowLeftMenu">Left</a><span id="categoryName">#(container.title)#</span></div>
						<A id="ClassReference" class="class-reference-book" data-ajax-ignored href="../documatic/%25CSP.Documatic.cls" target="_blank">Class Reference</A>
						</div>>
						&html<<div class="book-container">>
						Do container.HTMLRender()
						&html<</div>>
					}
					
					Do ..Footer(1,timestamp,,source,info, $zu(67,9,$J)-glo,$zh-elap)							
		   		}
		   		Else {
			   		&html<<div class="start-page">>
			   		Do ..RenderHomePage(setid)
			   		&html<</div>>
			   	}
			   	
		&html<</div></div>>	
	
	
	
	&html<<SCRIPT type="text/javascript">		
		var page = null;
		$(function () {		
			page = new DockBookPage();
		});	
	</SCRIPT>>
	
	&html<<SCRIPT type="text/javascript">		
		(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function()
{ (i[r].q=i[r].q||[]).push(arguments)}
,i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-77081839-1', 'auto');
ga('send', 'pageview');
	</SCRIPT>>
	
    
    &html<</html>>

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="RenderHomePage">
<Description>
Generate the home page.</Description>
<Final>1</Final>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>setid:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//&html<<span>setid = #(setid)#</span>>
	
	Set tRemove = 0
	Set tCount = ""
	//Show Tutorials books only
	//Set setid = $G(%request.Data("SET",1))	
	If (setid = "") { 
		Do ..RenderDefaultHomePage()
		/*Set pSeed = "book:Tutorials;"
		#; make sure global book list is built
		#; copy top-node into tBooks
		Do ..GetBookList(.tBooks)
		
		#; assemble list using filters
		If (pSeed '= "*:All;") {
			#; loop over each value in seed
			For n = 1:1:$L(pSeed,";") {
				Set tFilterPair = $P(pSeed,";",n)
				Set tGroup = $P(tFilterPair,":",1)
				Set tFilterValue = $P(tFilterPair,":",2)				
				#; test books, remove non-matches
				If (tGroup = "*") {
					#; ignore
				}
				ElseIf (tFilterValue '= "") {
					Set tBook = $O(tBooks(""))
					While (tBook '= "") {
						If (tGroup '= "") {
							If (('$D(^DocBook.BookList(tBook,tGroup,tFilterValue))) && ('$D(^DocBook.BookList(tBook,tGroup,"*")))) {
								Kill tBooks(tBook)
							}
						}
						Set tBook = $O(tBooks(tBook))
					}
				}
			}
		}

		#; arrange the list into categories
		#; sort by "title" (actually, remap)
		Set tKey = $O(tBooks(""))
		While (tKey '= "") {
			// !!!
			Set tTaxonomy = $ORDER(^DocBook.BookList(tKey, "book", ""))
			Set:($LENGTH(tTaxonomy) < 1) tTaxonomy = "Unknown"
			Set tCat = $Case($E(tTaxonomy,1,1),"G":1,"R":2,"T":3,"A":4,:1)
			Set tTitle = tBooks(tKey)
			Set:tTitle="" tTitle="zzz"
			Set tList(tCat,tTitle,tKey) = ""
			Set tKey = $O(tBooks(tKey))
		}

		#; build the final list
		Set n = 0
		Set tCat = $O(tList(""))
		While (tCat '= "") {
			Set tTitle = $O(tList(tCat,""))
			While (tTitle'="") {
				Set tKey = $O(tList(tCat,tTitle,""))
				While (tKey '= "") {

					Set tBookList(tCat,$I(n)) = tKey
					Set tKey = $O(tList(tCat,tTitle,tKey))
				}
				Set tTitle = $O(tList(tCat,tTitle))
			}
			Set tCat = $O(tList(tCat))
		}
		Set tCount = n		
		Set:$D(tBookList(1)) tBookList(1) = $$$Text("Guides")
		Set:$D(tBookList(2)) tBookList(2) = $$$Text("References") 
		Set:$D(tBookList(3)) tBookList(3) = $$$Text("Tutorials")
		Set:$D(tBookList(4)) tBookList(4) = $$$Text("Articles")
		
		#; show the books
		Do ..DisplayBookList(.tBookList, tRemove)*/
	}
	Else {
		
		&html<<div class="chapter-name"><span id="chapterName">#(..GetTitleForSet(setid))#</span></div>>
		// loop over books
		Do ..GetBooksForOnlySet(setid)
	}

	
	&html<<hr style="margin-right:120px;margin-left:120px;"/>>
	&html<<hr style="margin-right:140px;margin-left:140px;"/>>
	&html<<hr style="margin-right:160px;margin-left:160px;"/>>
]]></Implementation>
</Method>

<Method name="RenderDefaultHomePage">
<Description>
Generate the home page.</Description>
<Final>1</Final>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	&html<<div class="content-pad">
								<div>
									<div class="primary-content">										
											
	<h2>Announcements</h2>
	<h3>Caché 2016.1 and Ensemble 2016.1 Released</h3>
	<p>See <a target="_blank" href="/csp/docbook/DocBook.UI.FramePage.cls?KEY=GCRN">Release Notes for Cache 2016.1</a> and <a target="_blank" href="/csp/docbook/DocBook.UI.FramePage.cls?KEY=EGRN" class="last-child">Release Notes for Ensemble 2016.1</a> for new features and major developments in Caché 2016.1 and Ensemble 2016.1.</p>
 
	<h3>New Features</h3>
	<p>Caché 2016.1 has important new features, including <a target="_blank" href="/csp/docbook/DocBook.UI.FramePage.cls?KEY=GCRN_rn1601#GCRN_rn1601_json_performance">Improved JSON Processing Performance</a>, <a target="_blank" href="/csp/docbook/DocBook.UI.FramePage.cls?KEY=GCRN_rn1601#GCRN_rn1601_sql_performance">Improved SQL Processing Performance</a> and a new <a target="_blank" href="/csp/docbook/DocBook.UI.FramePage.cls?KEY=D2CLIENT_preface" class="last-child">DeepSee REST Services and JavaScript Library</a>.</p>

	<p>Ensemble 2016.1 has important new features, including <a target="_blank" href="/csp/docbook/DocBook.UI.FramePage.cls?KEY=EESB_preface">Enhanced Capabilities for using Ensemble as an ESB</a>, an <a target="_blank" href="/csp/docbook/DocBook.UI.FramePage.cls?KEY=EMONITOR_activity">Enhanced Statistics and Monitoring Package </a> and a new <a target="_blank" href="/csp/docbook/DocBook.UI.FramePage.cls?KEY=EHTTP_settings_outbound#EHTTP_sendsupersession" class="last-child">SuperSession Identity for Enhanced Tracking Between Productions</a>.</p>
	
	<h2>Additional Resources</h2>
	<h3>Developer Community</h3>
	<p>If you're looking for help or would like access to additional technical content from the InterSystems community of users and developers, access our <a target="_blank" href="https://community.intersystems.com/" class="last-child">Developer Community</a>.</p>
	<h3>Online Learning</h3>
	<p>InterSystems <a target="_blank" href="https://beta.learning.intersystems.com">Online Learning</a> provides you with continuous access to self-paced learning content. Use the Resource Guides and Learning Paths to <a target="_blank" href="https://beta.learning.intersystems.com/course/view.php?id=4">Learn Caché</a>, <a target="_blank" href="https://beta.learning.intersystems.com/course/view.php?id=15">Learn Ensemble</a> or browse the <a target="_blank" href="https://beta.learning.intersystems.com/totara/coursecatalog/courses.php" class="last-child">full catalog</a> of content.</p>
                                  </div>
								</div>
							</div>>
]]></Implementation>
</Method>

<Method name="GetBookList">
<Description>
Create global list of books with group/value information.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>*pBooks</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK

	#; first build set of *all* books
	&sql(DECLARE ACursor CURSOR FOR
		SELECT ID,blockid,remap,title
		FROM DocBook.book
		UNION ALL
		SELECT ID,blockid,remap,title
		FROM DocBook.article
		ORDER BY remap
	)

	&sql(OPEN ACursor)
	&sql(FETCH ACursor INTO :setid,:key,:remap,:title)
	While (SQLCODE = 0) {
		Set pBooks(key) = $S(remap="":title,1:remap)
		&sql(FETCH ACursor INTO :setid,:key,:remap,:title)
	}
	&sql(CLOSE ACursor)

	#; now add additional info about books
	#; this goes into the ^DocBook.BookList global
	If '$D(^DocBook.BookList) {
		Set tSC = ##class(DocBook.Utils).Classify()
	}

	Quit tSC
]]></Implementation>
</Method>

<Method name="DisplayBookList">
<Description><![CDATA[
Display the list of books as HTML.<br>
<var>pBookList</var> is of the form:<br>
pBookList(group) = title or $LISTBUILD(title,subtitle)<br/>
pBookList(group,n) = key<br/>]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&pBookList,pRemove:%Boolean=0]]></FormalSpec>
<Implementation><![CDATA[
	If ('$D(pBookList)) {
		#; no choices
		Set tMsg1 = $$$Text("No documents match the current selection.")
		Set tMsg2 = $$$Text("Press Reset and try a different combination.")
	    &html<<div class="TOCnomatch">#(tMsg1)#</div>>
	    &html<<div class="TOCnomatch">#(tMsg2)#</div>>
		Quit
	}

	Set msgRemove = $$$Text("Remove")
	Set helpRemove = $$$Text("Remove this item from the Recent list")

    &html<<div class="para">>
	Set tGroup = $O(pBookList(""))
	While (tGroup '= "") {
		/*If ($G(pBookList(tGroup)) '= "") {
			&html<<div class="TOCgroup">>
			If ($LISTVALID(pBookList(tGroup)))
			{
				&html<<a title="#($LISTGET(pBookList(tGroup),2))#">>
				&html<#($LISTGET(pBookList(tGroup),1))#>
				&html<</a>>
				//&html<#($LISTGET(pBookList(tGroup),1))#>
				//&html<<br>>
				//&html<<span class="TOCgroupexplain">>
				//&html<#($LISTGET(pBookList(tGroup),2))#>
				//&html<</span>>
			}
			Else
			{
				&html<#(pBookList(tGroup))#>
			}
			&html<</div>>
		}*/

		Set n = $O(pBookList(tGroup,""))
		While (n '= "") {
			Set key = pBookList(tGroup,n)
			Set link = "HREF=""DocBook.UI.FramePage.cls?KEY=" _ $ZCVT(key,"O","URL") _ """"
	
			&sql(SELECT title,subtitle INTO :title,:desc
				FROM DocBook.container
				WHERE blockid = :key)

			&html<<div class="TOCdiv">>
			&html<<a class="TOCChapter" #(link)# onclick="return zenPage.register('#(key)#');">>
			&html<#(title)#>
			&html<</a>>
			If (pRemove) {
				&html<<a class="TOCRemove" title="#(helpRemove)#" href="#" onclick="zenPage.removeItem('#(key)#');return false;">>
				&html<#(msgRemove)#>
				&html<</a>>
			}
	
			&html<<div class="TOCdesc">>
			&html<#(desc)#>
			&html<</div>>

			#; #&nbsp;&#151;&nbsp;(<span class="filename">#(key)#</span>)
	
			&html<</div>>
			Set n = $O(pBookList(tGroup,n))
		}
		Set tGroup = $O(pBookList(tGroup))
	}
    &html<</div>>
]]></Implementation>
</Method>

<Method name="GetTitleForSet">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>setid:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set title = ""
	&sql(SELECT title INTO :title FROM db_set WHERE id = :setid)

	If (SQLCODE '= 0) {
		Quit ""
	}
	Quit title
]]></Implementation>
</Method>

<Method name="GetBooksForOnlySet">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>setid:%String</FormalSpec>
<Implementation><![CDATA[
	// loop over books
	&sql(DECLARE BookCursor2 CURSOR FOR
		SELECT ID,blockid,title,remap
		INTO :id,:key,:title,:remap
		FROM DocBook.book
		WHERE container = :setid		
		ORDER BY remap
	)

	Set n = 0
	&sql(OPEN BookCursor2)
	&sql(FETCH BookCursor2)
	While (SQLCODE = 0) {		
			Set link = "HREF=""DocBook.UI.FramePage.cls?KEY=" _ $ZCVT(key,"O","URL") _ """"
	
			&sql(SELECT title,subtitle INTO :title,:desc
				FROM DocBook.container
				WHERE blockid = :key)
							
			&html<<div class="TOCdiv">>
			&html<<a class="TOCChapter" #(link)# onclick="return zenPage.register('#(key)#');">>
			&html<#(title)#>
			&html<</a>>
			&html<<div class="TOCdesc">>
			&html<#(desc)#>
			&html<</div>>

			#; #&nbsp;&#151;&nbsp;(<span class="filename">#(key)#</span>)
	
			&html<</div>>	
		&sql(FETCH BookCursor2)
	}
	&sql(CLOSE BookCursor2)
]]></Implementation>
</Method>

<Method name="register">
<Description>
Note that user clicked a specific choice.</Description>
<FormalSpec>pKey:%String</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var ok = zenPage.RegisterClick(pKey);
	return true;
]]></Implementation>
</Method>

<Method name="RenderBook">
<Description>
Generate the book for the current page.</Description>
<Final>1</Final>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>key:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set timestamp = ""
	Set source = ""
	Set info = ##class(BannerInfo).%New()
	Set glo = $zu(67,9,$J)
	Set elap = $zh
	
	If (key = "KNBASE") {
		Set container = ##class(DocBook.KNBase).%New()
		Set timestamp = $G(^DocBook.LoadTime)
	}
	ElseIf (key = "CATALOG") {
		Set container = ##class(DocBook.Catalog).%New()
		Set timestamp = $G(^DocBook.LoadTime)
	}
	ElseIf (key = "GettingStarted") {
		Set container = ##class(DocBook.GettingStarted).%New()
		Set timestamp = $G(^DocBook.LoadTime)
	}
	ElseIf (key '= "") {
		// open container object		
		Set container = ##class(DocBook.container).OpenKey(key)	
	}
	Else {
		// use Home container
		Set container = ##class(DocBook.Home).%New()
		Set home = 1
		Set timestamp = $G(^DocBook.LoadTime)
	}

	If (container = "") {
		//Do ..Header($$$T("Error"))			
		&html<<BR>>
		Set info.title = $$$T("Error")
		Set info.booktitle = $$$T("InterSystems Online Documentation")
		Write $$$T("Missing or Invalid Document"),!
	}
	ElseIf ($D(^DocBook.OffLine)) {
		//Do ..Header($$$T("Documentation Unavailable"))
		Set info.title = $$$T("Documentation Unavailable")
		Set info.booktitle = $$$T("InterSystems Online Documentation")
		&html<<BR>>
		Write $$$T("The documentation server is currently unavailable."),!
	}
	Else {
		//Set %tutorial = ($ZCVT(container.role,"U") = "TUTORIAL")
		//Do ..Header(container.title,,0)		
		&html<<BR>>			
		
		Do container.GetBannerInfo(info)
		Set info.container = container
		
		&html<<div class="category-name-container"><div class="category-name"><span id="categoryName">#(container.title)#</span></div>
		
		</div>>
		&html<<div class="book-container">>
		Do container.HTMLRender()
		&html<</div>>
		
		Set source = container.sourcefile
		Set:timestamp="" timestamp = container.sourcetime
	}
	
	Do ..Footer(1,timestamp,,source,info, $zu(67,9,$J)-glo,$zh-elap)
	
	Set escapedkey = ##class(%CSP.Page).EscapeHTML(key)
    &html<<INPUT TYPE="HIDDEN" ID="KEY" NAME="KEY" VALUE="#(escapedkey)#">>
	
	
	&html<<SCRIPT LANGUAGE=JavaScript SRC="docbook_nav.js"> </SCRIPT>>
	&html<<SCRIPT LANGUAGE="JavaScript">		
		function getCurretnKey(){
			return "#(escapedkey)#";
		}
		
		$(function () {			
			//new DockBookNavigation();
		});		
	 </SCRIPT>>
]]></Implementation>
</Method>
</Class>
</Export>
