<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="DocBook.Manager.Setup">
<IncludeCode>DocBookManagerInclude</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeCreated>63624,47017.737486</TimeCreated>

<Method name="SetupAndInitialize">
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=1</FormalSpec>
<Implementation><![CDATA[
    do ..LoadAndCompile(verbose)
    do ..SetupParamsAndTables(verbose)  
    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Done initializing the DocBook Manager!",verbose)
]]></Implementation>
</Method>

<Method name="SetupParamsAndTables">
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=1</FormalSpec>
<Implementation><![CDATA[

    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Setting options to recommended values...",verbose)

    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Setting ENTITYCHECK equal to 1...",verbose)
    do ##class(DocBook.Manager.ConfigUtils).SetParam("ENTITYCHECK",1) 

    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Setting IGNORECOLORERROR equal to 0...",verbose)
    do ##class(DocBook.Manager.ConfigUtils).SetParam("IGNORECOLORERROR",0) 

    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Setting INDEXREBUILD equal to 1...",verbose)
    do ##class(DocBook.Manager.ConfigUtils).SetParam("INDEXREBUILD",1) 

    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Setting PDFCHECK equal to 1...",verbose)
    do ##class(DocBook.Manager.ConfigUtils).SetParam("PDFCHECK",1) 

    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Setting SUPPRESSFRAMEWARNING equal to 0...",verbose)
    do ##class(DocBook.Manager.ConfigUtils).SetParam("SUPPRESSFRAMEWARNING",0) 

    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Setting WIDECHARCHECK equal to 1...",verbose)
    do ##class(DocBook.Manager.ConfigUtils).SetParam("WIDECHARCHECK",1) 

    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","Initializing tables and granting access to them...",verbose)
    do ##class(DocBook.ManagerTables.Utils).Initialize(verbose)
    do ##class(DocBook.ManagerTables.Log).AddLogItem("Config","DONE initializing tables",verbose)
]]></Implementation>
</Method>

<Method name="LoadAndCompile">
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
    do ##class(DocBook.ManagerTables.Log).AddLogItem("Setup","Reloading and compiling application...",verbose)
    set loaddir=##class(DocBook.Manager.ConfigUtils).GetParam("DBMBUILDDIR")
    set msg="Using load directory: "_loaddir
    do ##class(DocBook.ManagerTables.Log).AddLogItem("Setup",msg,verbose)
    do loadAndCompile^%zsetupdbm(verbose)
    do ##class(DocBook.ManagerTables.Log).AddLogItem("Setup","DONE reloading and compiling application.",verbose)
    do ##class(DocBook.ManagerTables.Utils).Initialize(verbose)
]]></Implementation>
</Method>
</Class>
</Export>
