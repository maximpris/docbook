<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="DocBook.Manager.FileUtils">
<IncludeCode>DocBookManagerInclude</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeCreated>63713,62583.415616</TimeCreated>

<Method name="SetUpFile">
<Description>
given a filename, create a file, and return a handle to the file object</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String,verbose:%Boolean=0</FormalSpec>
<ReturnType>%Library.File</ReturnType>
<Implementation><![CDATA[
    Set file = ##class(%Library.File).%New(filename)
    Set Status=file.Open("WSNK\UTF8\")
    If ($SYSTEM.Status.IsError(Status)) {
        do ##class(DocBook.ManagerTables.Log).AddLogItem("FileUtils","Error opening file "_filename,verbose)
        Quit
    }
    quit file
]]></Implementation>
</Method>

<Method name="StartBatchFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>file:%Library.File,caller:%String</FormalSpec>
<Implementation><![CDATA[
    do file.WriteLine("REM This file was generated by "_caller_" in DocBook.Manager.PerforceUtils") 
    do file.WriteLine("REM DocBook Manager built from: "_##class(DocBook.Manager.ConfigUtils).GetParam("DBMBUILDDIR"))
    do file.WriteLine("REM DocBook Manager version: "_$$$DOCBOOKMANAGERBUILDNAME)
    do file.WriteLine("REM Date and time when file was generated: "_$zdt($h,3))
    do file.WriteLine("")
]]></Implementation>
</Method>

<Method name="EndBatchFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>file:%Library.File</FormalSpec>
<Implementation><![CDATA[
    do file.WriteLine("")
    do file.WriteLine("set /p inputvar=Press any key to continue")
    do file.Close()
]]></Implementation>
</Method>
</Class>
</Export>
